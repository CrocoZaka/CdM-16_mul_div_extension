
MIL-STD-1750A
Присутствуют 16 и 32-битные команды двоичной арифметики а также 32 и 48-битные команды арифметики с плавающей запятой.
Результаты умножения и деления хранятся в одном регистре

В некоторых реализациях архитектуры MIL-STD-1750A, например в процессоре MA31750 производства Dynex Semiconductor, для умножения используется 24-битный параллельный умножитель. Это позволяет выполнять многобитные умножения, деления и нормализации за часть тактовых циклов, необходимых на машинах без таких ресурсов.

The derived operand DO is multiplied by the contents of the register RA. The LSH of the result is stored in register RA. The condition status CS is based on the result in register RA

AVR (Advanced Virtual RISC)
Гарвардская архитектура
Результат умножения (в тех моделях, в которых есть модуль умножения) всегда помещается в r1:r0.
Некоторые варианты команд умножения принимают в качестве аргументов только регистры из диапазона r16…r23 (FMUL, FMULS, FMULSU, MULSU) и требуют два цикла.
Результат арифметических и побитовых операций всегда помещается
в РОН – первый операнд

mul — умножение без учёта знака. Работает с беззнаковыми (или положительными) 8-битными операндами. Результат записывается в 16-битный регистр, состоящий из двух частей: младший байт — в регистре R0, старший байт — в регистре R1.
muls — умножение с учётом знака. Работает с знаковыми числами, используя формат представления чисел в дополнительном коде (two's complement). Если один из операндов отрицателен, результат также будет интерпретирован как отрицательное число.

PDP-11
the 16-bit values in R0 and R1 are multiplied together and the result is returned in the 32-bit value R0/R1.

При большом количестве умножений лучше использовать AVR. При делении - mil-std.

Заметки:
посмотреть x87

risc-5 отдельные регистры

подумать над вопросом какие хорошие и плохие стороны есть у каждой архитектуры

Умножение и деление в MIL-STD-1750A, AVR и PDP-11
Сравнение аппаратной поддержки, производительности, удобства реализации и ограничений по памяти

Краткое резюме
MIL-STD-1750A — на уровне ISA определены полноценные целочисленные операции умножения и деления в одинарной и двойной точности (16/32 бита). Реальная скорость зависит от конкретного чипа: реализации с параллельным умножителем и быстрой сетью сдвигов (например, MA31750) заметно ускоряют обе операции по сравнению с чисто микрокодными реализациями. MIL‑STD‑1750A (1980), Dynex MA31750.
AVR (классические 8‑битные) — есть аппаратный 8×8→16 множитель (результат в R1:R0), время выполнения — 2 такта для MUL/MULS/FMUL*. Аппаратного деления нет: используются программные подпрограммы, типично десятки–сотни тактов в зависимости от разрядности и оптимизации. AVR Instruction Set Manual, AVR200: Multiply and Divide Routines.
PDP‑11 — инструкции MUL/DIV входят в расширенный набор EIS (на ранних моделях — опция; например, KE11‑A как внешний блок для 11/20). Семантика фиксирована: делимое — пара регистров (R, R+1), после DIV частное в R, остаток в R+1, R должен быть чётным; остаток той же знаковости, что и делимое. Выполнение — микрокодное, «тяжёлое» по времени и зависит от режимов адресации/памяти. PDP‑11/40 Processor Handbook, DEC KE11‑A.
Критерии сравнения
Аппаратная поддержка (есть ли специализированные инструкции/блоки умножения/деления).
Производительность (циклограмма/время; где возможно — ориентиры из документации).
Удобство реализации (семантика команд, фиксированные регистры результатов, взаимодействие с памятью).
Ограничения (разрядность, регистровые пары, требования к памяти/коду).
Обзор по архитектурам
MIL‑STD‑1750A
Аппаратная поддержка. Стандарт описывает операции над 16‑битными и 32‑битными целыми, включая умножение/деление; для операций двойной точности используются парные регистры (заданное регистровое имя — старшее слово). Конкретные микросхемы могут добавлять ускорители: например, MA31750 имеет 24‑битный параллельный множитель и 32‑битную сеть сдвига, что ускоряет умножение, деление и нормализацию.
Источник: MIL‑STD‑1750A, разделы о форматах данных/регистрах; MA31750: 24‑bit parallel multiplier & 32‑bit shift network.

Производительность. Сильно зависит от реализации (микрокод vs. аппаратный множитель/баррельный сдвиг). На кристаллах класса MA31750 соответствующие операции выполняются за существенно меньшее число тактов, чем на ядрах без таких блоков.
Источник: MA31750 Datasheet.

Удобство и ограничения. Нативные целые — до 32 бит; при двойной точности результат располагается в паре регистров (старшее слово — в указанном регистре). Это удобно для компиляторов/ASM, но требует аккуратной работы с сохранением парных регистров в ABI.
Источник: MIL‑STD‑1750A.

AVR (8‑бит)
Аппаратная поддержка. Аппаратный 8×8→16 множитель реализован инструкциями MUL, MULS, MULSU, а также FMUL* (дробные умножения). Результат всегда попадает в R1:R0; часть FMUL* требует операнды из диапазона R16…R23. Аппаратного деления нет.
Источник: MUL/MULS/MULSU циклы = 2; размещение результата R1:R0 (см. главы 6.77–6.79); FMUL синтаксис и ограничения регистров 16–23.

Производительность.

Умножение (8×8) — 2 такта на всех вариантах ядер AVR с множителем.
Деление — только программно. По app‑note AVR200: 8/8 беззнаковое — 58 циклов (быстрая версия), 16/16 беззнаковое — 173 цикла (быстрая). Есть альтернативы, оптимизированные по коду.
Источники: AVR Instruction Set Manual, AVR200, табл. 1‑1.
Удобство и ограничения. Жёсткая фиксация результата умножения в R1:R0 (ABI обычно требует поддерживать R1=0 — его нужно сохранять/обнулять). Любые операции шире 8 бит требуют алгоритмов разбиения на части; деление — итеративные подпрограммы, что увеличивает код и время.
Источник: AVR Instruction Set Manual.

PDP‑11
Аппаратная поддержка. Инструкции MUL/DIV входят в EIS; на ранних CPU это опция (или внешний модуль KE11‑A для 11/20 и др.), на более поздних — стандартный компонент.
Источники: PDP‑11/40 Processor Handbook, раздел 2.4 и гл. 7.2; KE11‑A Extended Arithmetic Element.

Семантика и размещение результата.

MUL R,<src>: 16×16 → 32, результат в паре регистров (R, R+1).
DIV R,<src>: деление (R:R+1) ÷ src; частное → R, остаток → R+1; R должен быть чётным; остаток имеет знак делимого.
Источник: PDP‑11/40 Processor Handbook, гл. 4 — описание DIV.
Производительность. Инструкции EIS — многомикроцикловые; время зависит от режима адресации и числа обращений к памяти (подробности и таблицы — в приложении C руководства). Практически DIV существенно медленнее обычных ALU‑операций.
Источник: PDP‑11/40 Processor Handbook, Appendix C.

) требуют, чтобы операнды находились в регистрах R16-R23, потому что:

Специальные регистры для умножения: Регистры R16-R23 предназначены для операций умножения и деления, так как они связаны с внутренним умножающим модулем (Multiplier Unit). Регистры R0-R15 это регистры общего назначения
Аппаратные ограничения: Внутренний умножающий блок AVR использует эти регистры для хранения операндов и результатов, что обеспечивает быстрый доступ и минимальные задержки.
Стандартизация: Использование фиксированного диапазона регистров упрощает аппаратную реализацию и оптимизацию команд.



